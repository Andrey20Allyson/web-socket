import http = require('http');

type RequestMethods = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'HEAD' | 'TRACE' | 'OPTIONS' | 'CONNECT';

type ServerStartListener = (port: number, hostname: string) => void;

export interface ResponseDataI {
    data: string;
    cached: boolean;
}

export interface RequestListenersI {
    [key: string]: http.RequestListener[];
}

export interface ServerI {
    start(onStart?: ServerStartListener, port?: number, hostname?: string): void;
    setRootDir(newDir: string): void;
    sendData(path: string, res: http.ServerResponse): void;
    getData(path: string): Promise<ResponseDataI>;
    addRequestListener(method: RequestMethods, listener: http.RequestListener): number;
};

export function createServer(requestListener: http.RequestListener): ServerI;

export interface ModuleExportsI {
    createServer(requestListener: http.RequestListener): ServerI;
}